{"version":3,"file":"lib.js","sources":["../src/ci.coffee","../src/server.coffee","../src/test.coffee","../src/watch.coffee","../src/index.coffee"],"sourcesContent":["export default (opts) ->\n  task 'test:ci', 'Run tests', (opts) ->\n    invoke 'test', bail: true, coverage: true, ci: true\n","import connect     from 'connect'\nimport http        from 'http'\nimport serveStatic from 'serve-static'\n\nexport default (opts) ->\n  opts.port    ?= process.env.PORT ? 3333\n  opts.dir     ?= process.cwd() + '/test/fixtures'\n  opts.message ?= 'Run static server for tests'\n  opts.name    ?= 'static-server'\n\n  task opts.name, opts.message, (cb) ->\n    app = connect()\n    app.use serveStatic opts.dir\n    http.createServer(app).listen opts.port, cb\n","export default (opts) ->\n  task 'test', 'Run tests', (opts) ->\n    bail     = opts.bail     ? true\n    coverage = opts.coverage ? false\n    grep     = opts.grep     ? ''\n    test     = opts.test     ? 'test/'\n    verbose  = opts.verbose  ? ''\n\n    if opts.requireBuild\n      yield invoke 'build'\n\n    if opts.serveStatic\n      yield invoke 'static-server', opts.serveStatic\n\n    bin     = 'mocha'\n    bail    = '--bail' if bail\n    grep    = \"--grep #{opts.grep}\" if grep\n\n    # Default env variables for tests\n    env =\n      NODE_ENV: 'test'\n\n    env.VERBOSE = 'true' if verbose\n\n    # Setup addons to have mocha to require\n    addons = [\n      '--compilers coffee:coffee-script/register'\n      '--require co-mocha'\n    ]\n\n    # Coverage configuration\n    if coverage\n      bin = 'istanbul --print=none cover _mocha --'\n      addons.push '--require coffee-coverage/register-istanbul'\n    else\n      addons.push '--require postmortem/register'\n\n    # Update env with anything passed\n    for k,v of opts.env\n      env[k] = v\n\n    # Generate env exports\n    env = (k + '=' + v for k,v of env).join ' '\n\n    # Build mocha command\n    cmd = \"#{env} #{bin}\n           --colors\n           --reporter spec\n           --timeout 10000000\n           #{addons.join ' '}\n           --recursive\n           #{bail}\n           #{grep}\n           #{test}\"\n\n    # Run tests and capture status\n    {status} = yield exec.interactive cmd\n\n    # Close server\n    server.close() if opts.serveStatic\n\n    # Exit with test status if non-zero\n    process.exit status if status\n","export default (opts) ->\n  task 'test:watch', 'watch for changes and re-run tests', ->\n    invoke 'watch'\n\n    require('vigil').watch __dirname, (filename, stats) ->\n      if /^src/.test filename\n        invoke 'test'\n\n      if /^test/.test filename\n        invoke 'test', test: filename\n","import ci     from './ci'\nimport server from './server'\nimport test   from './test'\nimport watch  from './watch'\n\nexport default (opts = {}) ->\n  ci     opts\n  server opts\n  test   opts\n  watch  opts\n"],"names":["server"],"mappings":"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"}